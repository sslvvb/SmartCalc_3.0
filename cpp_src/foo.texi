\input texinfo
@setfilename SmartCalc_v1.0.info
@documentencoding UTF-8

@settitle SmartCalc

@copying
Copyright (c) hjerilyn 2022
@end copying

@titlepage
@title SmartCalc
@subtitle «SmartCalc_v1.0»
@author Hicks Jerilyn

@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@headings off

@contents

@ifnottex
@node Top
@top Foo Compiler
@insertcopying
@end ifnottex

@menu
* Description:                
* Operating Instructions::              
@end menu

@node Description
@chapter Description

@itemize @bullet
@item
This project implements a simple calculator in C++ language. The project is educational in nature. The calculator can perform simple arithmetic operations by substituting the variable x as a number, calculates the values of some functions and supports plotting these functions.

@item
Bracketed arithmetic expressions in infix notation support the following arithmetic operations and mathematical functions:

@itemize @minus
@item
Brackets (a+b)
@item
Addition a+b
@item
Subtraction a-b
@item
Multiplication a*b
@item
Division a/b
@item
Power a^b
@item
Modulus amodb
@item
Unary plus +a
@item
Unary minus -a
@end itemize

@item
Functions:

@itemize @minus
@item
Computes cosine cos(x)
@item
Computes sine sin(x)
@item
Computes tangent tan(x)
@item
Computes arc cosine acos(x)
@item
Computes arc sine asin(x)
@item
Computes arc tangent atan(x)
@item
Computes square root sqrt(x)
@item
Computes natural logarithm ln(x)
@item
Computes common logarithm log(x)
@end itemize

@end itemize

@node Operating Instructions
@chapter Operating Instructions

@itemize @bullet
@item
Both integers and real numbers with a dot can be input into the program.

@item
The calculation must be done after you complete entering the calculating expression and press the = symbol.

@item
The program will not allow you to enter incorrect values. The calculation will not start until the input expression meets the following criteria:

@itemize @minus
@item
Entries in the format (34x+3) are not allowed. After a number, the sign of the operation is always expected. The multiplication operator contains the required sign *.
@item
An operator is always expected after the operator sign: a number or a function.
@item
The number of opening and closing brackets is the same.
@item
Unary operators are valid if they are at the beginning of a line or they are set after an opening bracket.
@item
If the variable x is present in the expression, the calculation will not start until there is a valid value in the “Input x” field. Only digits and dot are allowed.
@end itemize

@item
To plot a function, you must additionally specify the scale value. Calculations will not start until the value in the “Scale” field is valid. Only digits and dot are allowed.

@item
Peculiarities:

@itemize @minus
@item
The program does not support operations with complex numbers.
@item
All signs of operations except the power are left associative. The power operator is right associative.
@end itemize

@end itemize

@bye
